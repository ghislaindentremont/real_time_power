dplyr::filter(block == 2, trial < 10) %>%
ggplot(aes(y = signal, x = time))+
geom_line()+
facet_grid(channel ~.)+
ggtitle("Partial Raw Experiment Data")+
xlab("Time (s)")+
ylab("Signal (uV?)")
raw_long %>%
dplyr::filter(trial_stage == "NF", block == 2, trial < 10) %>%
group_by(channel, time_est) %>%
summarize(avg_signal = mean(signal)) %>%
ggplot(aes(y = avg_signal, x = time_est))+
geom_line()+
facet_grid(channel~.)+
ggtitle("Partial NF Trial Grand Average")+
xlab("Time (s)")+
ylab("Signal (uV?)")
bu = butter(2, c(4,60)/(128/2), type = 'pass')
no = butter(2, c(59,61)/(128/2), type = 'stop')
raw_long_fil= raw_long %>%
group_by(channel) %>%
mutate(butter_filtered = signal::filter(bu, signal)) %>%
mutate(and_notch_filtered = signal::filter(no, butter_filtered))
raw_long_fil %>%
dplyr::filter(block == 2, trial < 10) %>%
ggplot(aes(y = and_notch_filtered, x = time))+
geom_line()+
facet_grid(channel ~.)+
ggtitle("Partial Filtered Experiment Data")+
xlab("Time (s)")+
ylab("Signal (uV?)")
raw_long_pwr = raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12") %>%
group_by(block, trial, trial_stage, cue_loc, channel) %>%
summarize(power = mean(welchPSD(ts(and_notch_filtered), seglength = 128)[["power"]][14:31]))
raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12") %>%
group_by(block, trial, trial_stage, cue_loc, channel)
ts(raw_long_pwrand_notch_filtered)
ts(raw_long_pwr$and_notch_filtered)
raw_long_pwr = raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12") %>%
group_by(block, trial, trial_stage, cue_loc, channel)
ts(raw_long_pwr$and_notch_filtered)
welchPSD(ts(raw_long_pwr$and_notch_filtered), seglength = 128)
wP = welchPSD(ts(raw_long_pwr$and_notch_filtered), seglength = 128)
View(raw_long)
wP[["power"]][14:31]
raw_long_pwr = raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12") %>%
group_by(block, trial, trial_stage, cue_loc, channel) %>%
summarize(power = mean(welchPSD(ts(and_notch_filtered), seglength = 128)[["power"]][14:31]))
View(raw_long_pwr)
summary(raw_long_pwr$power)
data(sunspots)
spec1 <- empiricalSpectrum(sunspots)
plot(spec1$frequency, spec1$power, log="y", type="l")
spec2 <- welchPSD(sunspots, seglength=10)
lines(spec2$frequency, spec2$power, col="red")
spec3 <- welchPSD(sunspots, seglength=20, r=0.2)
lines(spec3$frequency, spec3$power, col="blue")
empiricalSpectrum(ts(and_notch_filtered))
empiricalSpectrum(ts(raw_long_pwr$raw_and_notch_filtered))
empiricalSpectrum(ts(raw_long_pwr$and_notch_filtered))
ts(raw_long_pwr$and_notch_filtered)
raw_long_pwr$and_notch_filtered
empiricalSpectrum(ts(raw_long_fil$and_notch_filtered))
spec_me <- empiricalSpectrum(ts(raw_long_fil$and_notch_filtered))
spec_me <- empiricalSpectrum(ts(raw_long_fil$and_notch_filtered))
plot(spec_me$freq, spec_me$power, log='y', type-"l")
plot(spec_me$freq, spec_me$power, log='y', type="l")
?empiricalSpectrum
for_pwr = raw_long_fil$and_notch_filtered[1:10000]
spec_me <- empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power, log='y', type="l")
for_pwr = raw_long_fil$and_notch_filtered[10000:20000]
spec_me <- empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power, log='y', type="l")
for_pwr = raw_long_fil$and_notch_filtered[100000:200000]
spec_me <- empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power, log='y', type="l")
spec_me$frequency
range(spec_me$frequency)
# to use in tandem with 'checking_matlab_output'
for_pwr = raw_long_fil$and_notch_filtered[100000:200000]
spec_me <- empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power, log='y', type="l")
spec_me2 <- welchPSD(ts(and_notch_filtered), seglength = 128)
lines(spec_me2$frequency, spec_me2$power, col = "red")
# My data ----
# to use in tandem with 'checking_matlab_output'
for_pwr = raw_long_fil$and_notch_filtered[100000:200000]
spec_me <- empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power, type="l")
spec_me2 <- welchPSD(ts(and_notch_filtered), seglength = 128)
lines(spec_me2$frequency, spec_me2$power, col = "red")
range(spec_me$frequency)
for_pwr = raw_long_fil$and_notch_filtered[100000:200000]
spec_me <- empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power, log='y', type="l")
spec_me2 <- welchPSD(ts(and_notch_filtered), seglength = 128)
lines(spec_me2$frequency, spec_me2$power, col = "red")
spec_me2 <- welchPSD(ts(for_pwr), seglength = 128)
lines(spec_me2$frequency, spec_me2$power, col = "red")
?plot
spec_me2$frequency
spec_me2$power
range( spec_me2$power)
# to use in tandem with 'checking_matlab_output'
for_pwr = raw_long_fil$and_notch_filtered[100000:200000]
spec_me = empiricalSpectrum(ts(for_pwr))
plot(spec_me$freq, spec_me$power,  type="l")
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
lines(spec_me2$frequency, spec_me2$power, col = "red")
0.05*2
0.05*2*128
for_pwr = raw_long_fil$and_notch_filtered[100000:200000]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq, spec_me$power,  type="l")
lines(spec_me2$frequency, spec_me2$power, col = "red")
plot(spec_me$freq, spec_me$power, log = "y",  type="l")
lines(spec_me2$frequency, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power,  type="l")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
# to use in tandem with 'checking_matlab_output'
for_pwr = raw_long_fil$and_notch_filtered[100000:300000]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
for_pwr = raw_long_fil$and_notch_filtered[300000:700000]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
nrow(raw_long_fil)
for_pwr = raw_long_fil$and_notch_filtered[nrow(raw_long_fil)/2:row(raw_long_fil)/2+row(raw_long_fil)/100]
for_pwr = raw_long_fil$and_notch_filtered[nrow(raw_long_fil)/2:nrow(raw_long_fil)/2+nrow(raw_long_fil)/100]
nrow(raw_long_fil)/2:nrow(raw_long_fil)/2+nrow(raw_long_fil)/100
nrow(raw_long_fil)/2
nrow(raw_long_fil)/2+nrow(raw_long_fil)/100
for_pwr = raw_long_fil$and_notch_filtered[(nrow(raw_long_fil)/2):(nrow(raw_long_fil)/2+nrow(raw_long_fil)/100)]
for_pwr = raw_long_fil$and_notch_filtered[(nrow(raw_long_fil)/2):(nrow(raw_long_fil)/2+nrow(raw_long_fil)/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_chs = raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12")
len = nrow(raw_long_fil_chs)
for_pwr = raw_long_fil_chs$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_chs = raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12")
len = nrow(raw_long_fil_chs)
for_pwr = raw_long_fil_chs$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 1/128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_chs = raw_long_fil %>%
dplyr::filter(channel == "Ch8" || channel == "Ch12")
len = nrow(raw_long_fil_chs)
for_pwr = raw_long_fil_chs$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 1280)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
spec_me = empiricalSpectrum(ts(for_pwr))
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch8")
len = nrow(raw_long_fil_Ch8)
for_pwr = raw_long_fil_Ch8$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch8")
len = nrow(raw_long_fil_Ch8)
for_pwr = raw_long_fil_Ch8$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", title = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", title = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch8")
len = nrow(raw_long_fil_Ch8)
for_pwr = raw_long_fil_Ch8$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch8")
len = nrow(raw_long_fil_Ch8)
for_pwr = raw_long_fil_Ch8$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch12")
len = nrow(raw_long_fil_Ch12)
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch8")
len = nrow(raw_long_fil_Ch8)
for_pwr = raw_long_fil_Ch8$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch12 = raw_long_fil %>%
dplyr::filter(channel == "Ch12")
len = nrow(raw_long_fil_Ch12)
for_pwr = raw_long_fil_Ch12$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch8 = raw_long_fil %>%
dplyr::filter(channel == "Ch8")
len = nrow(raw_long_fil_Ch8)
for_pwr = raw_long_fil_Ch8$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 8")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
raw_long_fil_Ch12 = raw_long_fil %>%
dplyr::filter(channel == "Ch12")
len = nrow(raw_long_fil_Ch12)
for_pwr = raw_long_fil_Ch12$and_notch_filtered[(len/2):(len/2+len/100)]
spec_me = empiricalSpectrum(ts(for_pwr))
spec_me2 = welchPSD(ts(for_pwr), seglength = 128)
plot(spec_me$freq*128*2, spec_me$power,  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 12")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
plot(spec_me$freq*128*2, spec_me$power, log = "y",  type="l", xlab="Frequency (Hz)", ylab="Power", main = "Channel 12")
lines(spec_me2$frequency*128*2, spec_me2$power, col = "red")
pwr_cal = raw_long_pwr %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_cal = mean(power))
pwr_real = pwr_long %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_real = mean(signal))
pwr_compare = bind_cols(pwr_cal[, -4], pwr_real)
pwr_real = pwr_long %>%
dplyr::filter(block > 1) %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_real = mean(signal))
pwr_compare = bind_cols(pwr_cal[, -4], pwr_real)
pwr_cal = raw_long_pwr %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_cal = mean(power))
pwr_real = pwr_long %>%
dplyr::filter(block != "1") %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_real = mean(signal))
pwr_compare = bind_cols(pwr_cal[, -4], pwr_real)
pwr_cal = raw_long_pwr %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_cal = mean(power))
pwr_real = pwr_long %>%
dplyr::filter(block != "1") %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_real = mean(signal))
pwr_compare = bind_cols(pwr_cal[, -4], pwr_real)
pwr_compare %>%
ggplot(aes(x = avg_cal, y = avg_real))+
geom_point()+
geom_smooth()+
facet_grid(channel~.)+
xlab("Calculated Power")+
ylab("Realtime Power")+
xlim(c(0,25))+  # to ignore outliers
ylim(c(0,1))
pwr_compare[,-c(1,2,3)] %>%
group_by(channel) %>%
summarize(corr = cor(avg_cal, avg_real, use = "complete"))
pwr_cal = raw_long_pwr %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_cal = mean(power))
pwr_real = pwr_long %>%
dplyr::filter(block != "1") %>%
group_by(block, trial, trial_stage, channel) %>%
summarize(avg_real = mean(signal))
pwr_compare = bind_cols(pwr_cal[, -4], pwr_real)
pwr_compare %>%
ggplot(aes(x = avg_cal, y = avg_real))+
geom_point()+
geom_smooth()+
facet_grid(channel~.)+
xlab("Calculated Power")+
ylab("Realtime Power")
# xlim(c(0,25))+  # to ignore outliers
# ylim(c(0,1))
pwr_compare[,-c(1,2,3)] %>%
group_by(channel) %>%
summarize(corr = cor(avg_cal, avg_real, use = "complete"))
baseline_pwr_cal = pwr_cal %>%
dplyr::filter(trial_stage == "fixation") %>%
group_by(block, trial) %>%
summarize(baseline = mean(avg_cal))
window = NULL
mavgs = NULL
for (i in 1:nrow(baseline_pwr_cal)) {
window = c(window, baseline_pwr_cal$baseline[i])
if (length(window) > 40) {
window_40 = window[1:40]
} else {
window_40 = window
}
mavg = mean(window_40)
mavgs = c(mavgs, mavg)
}
mavg_pwr_cal = tibble(cal_mavg = mavgs, block = baseline_pwr_cal$block, trial = baseline_pwr_cal$trial)
mavg_pwr_real = pwr_long %>%
dplyr::filter(trial_stage == "NF") %>%
group_by(block, trial) %>%
summarize(real_mavg = mean(baseline_power_mavg)) %>%
slice(1:nrow(mavg_pwr_cal))
mavg_compare = left_join(mavg_pwr_cal, mavg_pwr_real)
mavg_compare %>%
ggplot(aes(x = cal_mavg, y = real_mavg))+
geom_point()+
geom_smooth()+
ggtitle("Moving Average Baseline Power")+
xlab("Calculated Baseline")+
ylab("Realtime Basline")
cor(mavg_compare$cal_mavg, mavg_compare$real_mavg)
LI_cal = raw_long_pwr %>%
dplyr::filter(trial_stage == "NF") %>%
left_join(mavg_pwr_cal) %>%
spread(key = channel, power) %>%
mutate(
LI_cal = ifelse(
cue_loc == "right"
, log2(Ch12/cal_mavg) - log2(Ch8/cal_mavg)
, log2(Ch8/cal_mavg) - log2(Ch12/cal_mavg)
)
)
LI_real = pwr_long %>%
mutate(
LI_pos = ifelse(
cue_loc == "right"
, LI
, -LI
)
) %>%
dplyr::filter(trial_stage == "NF") %>%
group_by(block, trial) %>%
summarize(avg_LI = mean(LI_pos))
LI_compare = bind_cols(LI_cal, LI_real[,-c(1:2)])
LI_cal = raw_long_pwr %>%
dplyr::filter(trial_stage == "NF") %>%
left_join(mavg_pwr_cal) %>%
spread(key = channel, power) %>%
mutate(
LI_cal = ifelse(
cue_loc == "right"
, log2(Ch12/cal_mavg) - log2(Ch8/cal_mavg)
, log2(Ch8/cal_mavg) - log2(Ch12/cal_mavg)
)
)
LI_real = pwr_long %>%
mutate(
LI_pos = ifelse(
cue_loc == "right"
, LI
, -LI
)
) %>%
dplyr::filter(trial_stage == "NF") %>%
group_by(block, trial) %>%
summarize(avg_LI = mean(LI_pos))
LI_compare = bind_cols(LI_cal, LI_real[1:240,-c(1:2)])
LI_compare %>%
ggplot(aes(x = LI_cal, y = avg_LI))+
geom_point()+
geom_smooth()+
ggtitle("Calculated by Trial")+
xlab("Calculated LI")+
ylab("Realtime LI")+
xlim(c(-1.1, 1))+
ylim(c(-1,1.5))
cor(LI_compare$LI_cal, LI_compare$avg_LI)
LI_cal = raw_long_pwr %>%
dplyr::filter(trial_stage == "NF") %>%
left_join(mavg_pwr_cal) %>%
spread(key = channel, power) %>%
mutate(
LI_cal = ifelse(
cue_loc == "right"
, log2(Ch12/cal_mavg) - log2(Ch8/cal_mavg)
, log2(Ch8/cal_mavg) - log2(Ch12/cal_mavg)
)
)
LI_real = pwr_long %>%
mutate(
LI_pos = ifelse(
cue_loc == "right"
, LI
, -LI
)
) %>%
dplyr::filter(trial_stage == "NF") %>%
group_by(block, trial) %>%
summarize(avg_LI = mean(LI_pos))
LI_compare = bind_cols(LI_cal, LI_real[1:240,-c(1:2)])
LI_compare %>%
ggplot(aes(x = LI_cal, y = avg_LI))+
geom_point()+
geom_smooth()+
ggtitle("Calculated by Trial")+
xlab("Calculated LI")+
ylab("Realtime LI")
# +xlim(c(-1.1, 1))+
# ylim(c(-1,1.5))
cor(LI_compare$LI_cal, LI_compare$avg_LI)
cor(LI_compare$LI_cal[2:240], LI_compare$avg_LI[2:240])
LI_cal = raw_long_pwr %>%
dplyr::filter(trial_stage == "NF") %>%
left_join(mavg_pwr_cal) %>%
spread(key = channel, power) %>%
mutate(
LI_cal = ifelse(
cue_loc == "right"
, log2(Ch12/cal_mavg) - log2(Ch8/cal_mavg)
, log2(Ch8/cal_mavg) - log2(Ch12/cal_mavg)
)
)
LI_real = pwr_long %>%
mutate(
LI_pos = ifelse(
cue_loc == "right"
, LI
, -LI
)
) %>%
dplyr::filter(trial_stage == "NF") %>%
group_by(block, trial) %>%
summarize(avg_LI = mean(LI_pos))
LI_compare = bind_cols(LI_cal, LI_real[1:240,-c(1:2)])
LI_compare %>%
ggplot(aes(x = LI_cal, y = avg_LI))+
geom_point()+
geom_smooth()+
ggtitle("Calculated by Trial")+
xlab("Calculated LI")+
ylab("Realtime LI")
# +xlim(c(-1.1, 1))+
# ylim(c(-1,1.5))
cor(LI_compare$LI_cal[2:240], LI_compare$avg_LI[2:240])
pwr_long %>%
group_by(trial_stage) %>%
summarize(
perfect_stage_time = ifelse(
trial_stage == "NF" || trial_stage == "fixation"
, max(iteration)*(1/60)*3
, max(iteration)*(1/60)*1
)
, median_stage_time = ifelse(
trial_stage == "NF" || trial_stage == "fixation"
, median(iteration)*(1/60)*3
, median(iteration)*(1/60)*1
)
)
pwr_long %>%
group_by(trial_stage) %>%
summarize(
perfect_stage_time = ifelse(
trial_stage == "NF" || trial_stage == "fixation"
, max(iteration)*(1/60)*5
, max(iteration)*(1/60)*1
)
, median_stage_time = ifelse(
trial_stage == "NF" || trial_stage == "fixation"
, median(iteration)*(1/60)*5
, median(iteration)*(1/60)*1
)
)
